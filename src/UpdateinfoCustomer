import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.Scanner;

public class CustomerManager {
  private static final String CUSTOMER_FILE = "Customer_Info.txt";
  private static final String DELIMITER = ",";

  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    // Prompt the user to enter their username and password
    System.out.print("Enter your username: ");
    String username = scanner.nextLine();
    System.out.print("Enter your password: ");
    String password = scanner.nextLine();

    // Read the list of customers from the file
    List<Customer> customers = readCustomersFromFile();

    // Find the customer with the given username and password
    Customer customer = null;
    for (Customer c : customers) {
      if (c.username.equals(username) && c.password.equals(password)) {
        customer = c;
        break;
      }
    }

    // If the customer was not found, display an error message
    if (customer == null) {
      System.out.println("Invalid username or password.");
      return;
    }

    // Edit the customer information
    System.out.print("Enter new password (blank to keep current value): ");
    password = scanner.nextLine().trim();
    if (!password.isEmpty()) {
      customer.password = password;
    }
    System.out.print("Enter new full name (blank to keep current value): ");
    String fullName = scanner.nextLine().trim();
    if (!fullName.isEmpty()) {
      customer.fullName = fullName;
    }
    System.out.print("Enter new phone number (blank to keep current value): ");
    String phoneNumber = scanner.nextLine().trim();
    if (!phoneNumber.isEmpty()) {
      customer.phoneNumber = phoneNumber;
    }
    System.out.print("Enter new email (blank to keep current value): ");
    String email = scanner.nextLine().trim();
    if (!email.isEmpty()) {
      customer.email = email;
    }
    System.out.print("Enter new address (blank to keep current value): ");
    String address = scanner.nextLine().trim();
    if (!address.isEmpty()) {
      customer.address = address;
    }

    // Write the updated list of customers to the file
    writeCustomersToFile(customers);

    scanner.close();
  }

  private static List<Customer> readCustomersFromFile() {
    List<Customer> customers = new ArrayList<>();
    File file = new File(CUSTOMER_FILE);
    if (file.exists()) {
      try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
        String line;
        while ((line = reader.readLine()) != null) {
          String[] parts = line.split(DELIMITER);
          Customer customer = new Customer();
          customer.username = parts[0];
          customer.password = parts[1];
          customer.fullName = parts[2];
          customer.phoneNumber = parts[3];
          customer.email = parts[4];
          customer.address = parts[5];
          customers.add(customer);
        }
      } catch (IOException e) {
        e.printStackTrace();
      }
    }
    return customers;
  }

  private static void writeCustomersToFile(List<Customer> customers) {
    File file = new File(CUSTOMER_FILE);
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
      for (Customer customer : customers) {
        writer.write(customer.username + DELIMITER + customer.password + DELIMITER + customer.fullName + DELIMITER + customer.phoneNumber + DELIMITER + customer.email + DELIMITER + customer.address);
        writer.newLine();
      }
    } catch (IOException e) {
      e.printStackTrace();
    }
  }
}


